name: release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: https://registry.npmjs.org/

      - name: Install Dependencies
        run: npm ci

      - name: Build Package
        run: npm run build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This creates PR with all of the package versions updated
          publish: npm run changeset:publish
          version: npm run changeset:version
          commit: "chore: version packages"
          title: "chore: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const version = require('./package.json').version;
            const tagName = `v${version}`;
            
            try {
              await github.rest.repos.createRelease({
                owner,
                repo,
                tag_name: tagName,
                name: `Release ${tagName}`,
                draft: false,
                prerelease: false,
                generate_release_notes: true
              });
              console.log(`Created GitHub release for ${tagName}`);
            } catch (error) {
              console.error(`Failed to create release: ${error.message}`);
            }